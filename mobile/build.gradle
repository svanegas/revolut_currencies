apply plugin: 'com.android.application'
apply from: "$project_directory/common.gradle"
apply plugin: 'io.fabric'
apply from: 'utils.gradle'

ext {
    version_major = 0
    version_minor = 3
    version_patch = 0
    version_classifier = null
    is_snapshot = true
}

android {
    defaultConfig {
        applicationId "com.svanegas.revolut.currencies"
        versionCode generateVersionCode()
        versionName generateVersionName()
    }

    productFlavors {
        dev {
            dimension = "env"
            versionNameSuffix "-dev"
            applicationIdSuffix ".dev"
        }
        production {
            dimension = "env"
        }
    }

    signingConfigs {
        release {
            // passwords and alias are obtained via askForPasswords task
            storeFile file("$project_directory/${project.property('keystore.file')}")
            storePassword ""
            keyAlias ""
            keyPassword ""
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "-debug"
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            // package task is dependent on askForPasswords
            def packageTask = tasks.named("package${variant.name.capitalize()}")

            // adds signing for release assemble tasks
            packageTask.configure {
                dependsOn("askForPasswords")
            }
        }

        renameArtifact(variant, "${rootProject.name}")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':revolut-base')
    implementation project(':revolut-base:arch')
    implementation project(':revolut-base:rest')
    implementation project(':revolut-base:analytics')
}

apply plugin: 'com.google.gms.google-services'