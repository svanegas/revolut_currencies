apply from: "$project_directory/revolut-base/library.gradle"

android {
    defaultConfig {
        buildConfigField "boolean", "LOGS", "true"
    }

    flavorDimensions "env"

    productFlavors {
        dev {
            dimension = "env"
            // TODO: Use Dev base URL
            buildConfigField "String", "REST_BASE_URL", "\"https://revolut.duckdns.org/\""
        }
        production {
            dimension = "env"
            buildConfigField "String", "REST_BASE_URL", "\"https://revolut.duckdns.org/\""
            buildConfigField "boolean", "LOGS", "false"
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOGS", "true"
            // this is here, so that productionDebug can have logs
        }
    }
}

dependencies {
    // AndroidX
    api "androidx.constraintlayout:constraintlayout:${versions.androidx_constraintlayout}"
    api "androidx.appcompat:appcompat:${versions.androidx_appcompat}"
    api "androidx.recyclerview:recyclerview:${versions.androidx_recyclerview}"
    api "androidx.lifecycle:lifecycle-extensions:${versions.androidx_lifecycle}"
    api "androidx.databinding:databinding-runtime:${versions.android_gradle}"
    api "androidx.databinding:databinding-adapters:${versions.android_gradle}"

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"

    // Retrofit + OkHttp + Gson
    api "com.google.code.gson:gson:${versions.gson}"
    api "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    api "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    api "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    api("com.squareup.retrofit2:converter-gson:${versions.retrofit}") {
        transitive = true
    }
    api "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"

    // RxJava
    api "io.reactivex.rxjava2:rxkotlin:${versions.rx_rxkotlin}"
    api "io.reactivex.rxjava2:rxandroid:${versions.rx_rxandroid}"
    api "io.reactivex.rxjava2:rxjava:${versions.rx_rxjava}"
    api "com.jakewharton.rxrelay2:rxrelay:${versions.rx_rxrelay}"

    // Alfonz
    api "org.alfonz:alfonz-adapter:${versions.alfonz}"

    // Dagger
    api "com.google.dagger:dagger:${versions.dagger}"
    api "com.google.dagger:dagger-android:${versions.dagger}"
    api "com.google.dagger:dagger-android-support:${versions.dagger}"

    // Firebase
    api "com.google.firebase:firebase-core:${versions.firebase_core}"
    api "com.google.firebase:firebase-analytics:${versions.firebase_analytics}"

    // Crashlytics
    api "com.crashlytics.sdk.android:crashlytics:${versions.crashlytics}"

    // Timber
    api "com.jakewharton.timber:timber:${versions.timber}"
}
